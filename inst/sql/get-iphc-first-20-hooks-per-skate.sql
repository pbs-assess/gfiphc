SELECT SURVEY_SERIES_ID AS surveyseriesID
	, SURVEY_ID AS surveyID
	, TRIP_ID AS tripID
	, FE_MAJOR_LEVEL_ID setID
	, FE_PARENT_EVENT_ID unique_skate_ID
	, COUNT(FE_MINOR_LEVEL_ID) AS depl_hooks_per_skate
	, SUM(CASE WHEN HOOK_YIELD_CODE IN (7) THEN 0 ELSE 1 END) AS obs_hooks_per_skate
	, SUM(CASE WHEN HOOK_YIELD_CODE IN (0,7) THEN 0 ELSE 1 END) AS use_hooks_per_skate
	, SUM(CASE WHEN HOOK_YIELD_CODE IN (2, 6) THEN 1 ELSE 0 END) AS bait_on_hook
	, SUM(CASE WHEN HOOK_CONDITION_CODE IN (1, 2, 3, 7) THEN 1 ELSE 0 END) AS bent_broken_missing_hooks
FROM (SELECT FE.TRIP_ID
		, FE_MAJOR_LEVEL_ID
		, FE.FE_PARENT_EVENT_ID
		, FE.FISHING_EVENT_ID 
		, S.SURVEY_ID 
		, SURVEY_SERIES_ID 
		, FE_MINOR_LEVEL_ID
		, ROW_NUMBER() OVER(PARTITION BY FE.TRIP_ID, FE.FE_PARENT_EVENT_ID ORDER BY FE.TRIP_ID, FE.FISHING_EVENT_ID, FE_MINOR_LEVEL_ID) AS RN
		, HOOK_YIELD_CODE
		FROM GFBioSQL.dbo.FISHING_EVENT FE
		INNER JOIN GFBioSQL.dbo.TRIP T ON FE.TRIP_ID = T.TRIP_ID
		INNER JOIN GFBioSQL.dbo.TRIP_SURVEY TS ON TS.TRIP_ID = T.TRIP_ID
		INNER JOIN GFBioSQL.dbo.SURVEY S ON S.SURVEY_ID = TS.SURVEY_ID
		INNER JOIN GFBioSQL.dbo.HOOK_SPECS HS ON HS.FISHING_EVENT_ID = FE.FISHING_EVENT_ID
		WHERE SURVEY_SERIES_ID = 14 AND FE_MINOR_LEVEL_ID IS NOT NULL
		) AS T
	WHERE T.RN <=20
	GROUP BY SURVEY_SERIES_ID
	, SURVEY_ID
	, TRIP_ID
	, FE_MAJOR_LEVEL_ID 
	, FE_PARENT_EVENT_ID 
